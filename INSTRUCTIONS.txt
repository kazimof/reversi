# reversi-server and reversiclient
# Author: kazimof at zzero dot org

#    This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    http://www.gnu.org/licenses/.

greeting and disclaimer: I have paid almost no attention to error trapping, although I have tried to ensure that errors don't result in harm. This system is in currently production use on several hundred devices and I have yet to have a system fail to check in. The only recurring issues are with some installations of openwrt see notes below regarding no-net-on-reboot.

Anyhow, the system concept and design are here for you to run with, feel free to borrow and learn from the code. I don't pretend that my programming is anything to write home about, there are those far more skilled than I and I have learned everything I know from them. 

kazim

A SETTING UP THE REVERSI SERVER
B RUNNING THE CLIENT CREATOR
C DEPLOYING CLIENT SCRIPTS 

==============================================

A SETTING UP THE REVERSI SERVER

SECURITY WARNING: I have no doubt there are exploits, I am hoping this release on github will reveal them. So, DO NOT USE ROOT to run the server side scripts.

Probably your in a hurry and you just want to get this working right?
I'll write the setup instructions in bash cos that'll be easier for all of us.

cd /root/
git clone git://github.com/kazimof/reversi.git
cd reversi
tree .
.
├── client-builder
│   ├── keys
│   │   └── README
│   ├── libs
│   │   └── reversiclientlib.sh
│   ├── resources
│   │   ├── openwrt_install_screen.sh
│   │   ├── pingtest.sh
│   │   └── tcdo.sh
│   ├── setup.sh
│   ├── sources
│   │   ├── README
│   │   └── ssh.rev.EXAMPLE
│   ├── sourcestore
│   │   └── README
│   └── templates
│       ├── mon_gen.sh
│       ├── rev_gen.sh
│       ├── rev_screen.sh
│       └── tun_gen.sh
├── INSTRUCTIONS.txt
├── README.md
└── reversi
    ├── archive_month.sh
    ├── devscripts
    │   ├── checkserveruptime.sh
    │   └── r.sh
    ├── logs
    │   └── ports.log
    ├── server_port_mon.sh
    └── timeout3.sh
useradd -m reversi
mv reversi /home/reversi/
chown reversi:reversi /home/reversi/reversi -R
su reversi
ssh root@localhost
CTRL-C (at prompt)
exit
(I was just creating a .ssh dir for reversi with correct perms)
ssh-keygen -t rsa -b 4096 -f /home/reversi/.ssh/reversibash.key
cd /home/reversi/.ssh/
echo "command=\"/home/reversi/reversi/server_port_mon.sh \$SSH_ORIGINAL_COMMAND\" $(cat reversibash.key.pub)" > chown reversi:reversi authorized_keys2


#TO TEST A CONNECTION
#from another terminal:
ssh-agent bash #just clearing any ssh keys I have in there
ssh -i /home/reversi/.ssh/reversibash.key reversi@localhost  1 2 3 4 
0
tail /home/reversi/reversi/logs/ports.log
WARNING: -2.1.3 suspicious request
ssh -i /home/reversi/.ssh/reversibash.key reversi@localhost  1 2 3 4 
0
ssh -i /home/reversi/.ssh/reversibash.key reversi@localhost  1 60000 3 4
60

tail /home/reversi/reversi/logs/ports.log
WARNING: -2.1.3 suspicious request
tunnel process ID: 
WARNING: NO PID ACCOCIATED WITH 60000
2017-12-21-22-20-60000.1.3 DOWN
killing PID...
2017-12-21-22-20-60000.1.3 UNKNOWN

# If the everything shows up as above reversi server is working! 

SERVER SETUP - TROUBLESHOOTING
=================================

ssh: connect to host localhost port 22: Connection refused
------------------
#ssh server is off

telnet: Unable to connect to remote host: Connection refused
---------------------
#firewall issue

you can no longer ssh to your own server
----------------------------------------
#this is probbaly fail2ban which did not like the initial rapid reverse ssh connections you made 
#carry your key via another server and log in to your reversi-server OR wait  
#on reverersi-server run:
fail2ban-client status sshd
Status for the jail: sshd
|- Filter
|  |- Currently failed:	1
|  |- Total failed:	4907
|  `- File list:	/var/log/auth.log
`- Actions
   |- Currently banned:	1
   |- Total banned:	532
   `- Banned IP list:	212.212.212.212
fail2ban-client set sshd unbanip 212.212.212.212

B RUNNING THE CLIENT CREATOR
============================

cd /root/reversi/client-builder
tree .
├── build
├── keys
│   ├── README
├── libs
│   └── reversiclientlib.sh
├── resources
│   ├── openwrt_install_screen.sh
│   ├── pingtest.sh
│   └── tcdo.sh
├── setup.sh
├── sources
│   ├── README
│   └── ssh.rev.EXAMPLE
├── sourcestore
│   └── README
└── templates
    ├── mon_gen.sh
    ├── rev_gen.sh
    ├── rev_screen.sh
    └── tun_gen.sh
mv /home/reversi/.ssh/reversibash.key /home/reversi/client-builder/keys/
cd /home/reversi/client-builder/sources
cp ssh.rev.EXAMPLE ssh.rev
vi ssh.rev
#configure as you need, the variable names are self explanatory
:wq
cd ..
./setup.sh build
#various output
./setup.sh bundle
#various output

In the current directory there should be tar of your client scripts.


C DEPLOYING CLIENT SCRIPTS - Linux/MacOS
##################
apt-get install screen
#get your copy of the client tar file into the root dir
tar xvf nodename.tar
cd reversiclient-7
tree .
.
├── kam50012REV.sh
├── kar50012REV.sh
├── openwrt_install_screen.sh
├── pingtest.sh
├── reversibash.key
├── reversi.sh
├── ssh.rev
└── tcdo.sh

#edit /etc/rc.local and insert the following ABOVE the line: touch /var/lock/subsys/local
/root/reversiclient-7/reversi.sh

C DEPLOYING CLIENT SCRIPTS - OpenWRT
###########################
There are some special measures to take for SOME openwrt devices such as those with too little space to install screen and dependencies upon boot and to reboot if the first install attempts happenned while the net was down.

#edit /etc/rc.local and insert the following ABOVE the line: "exit 0" and/or "touch /var/lock/subsys/local"

/root/reversiclient-7/openwrt_install_screen.sh
/root/reversiclient-7/reversi.sh
exit 0

At premises where you may not have physical access (such as authorised surveillance installations, locations with staff too scared to reboot tech etc) the OpenWRT box may not have access netork upon boot and therefore will not run the screen install at startup. In this case add this entry to the crontab to check on net and reversi status every 15 mins and take action if everything is not running as expected.  

*/15 * * * * pingtest.sh 8.8.8.8


TESTING
#######
ssh-agent bash
/root/reversiclient-7/reversi.sh
setting up screens:
screen creator and stuffer
No screen session found.
No screen session found.
screen -ls
16457.kam50001	(21/12/17 23:05:55)	(Detached)
16445.kar50001	(21/12/17 23:05:49)	(Detached)
screen -r kam
IMPORTANT!!!!!!!!!!!!!
YOU MUST NOT CARRY another working key when you run this for testing or you will get erro such as - integer expression expected
IMPORTANT!!!!!!!!!!!!!
60
CTRL-ad
screen -r kar
CONNECTING TO SERVER reversi-server-IP
CTRL-ad



===========TODO========= 
echo "send also a password per portto authenicate the device this was installed on, this could be an md5sum of the disk partition sector or some other unique ID for the client-device. To do this we'd need to break the ease we have of adopting a new client by registering something about clients on the reversi-server. An alternative would be an ssh capability for the reversi user into the clients to test their unique ID. This opens up the possibility of the reversi user being used to exploit all devices - NOT ACCEPTABLE"

echo "Allow low port numbers, normally inadvisable EXCEPT in the case where you are really forwarding a low port"

echo "patch logger for monitoring https://blog.rootshell.be/2009/03/01/keep-an-eye-on-ssh-forwarding/"

echo "Sanity check port duplicates by scanning sources directory for duplicate port allocations"



============================USEFUL SOURCES======================
http://askubuntu.com/questions/48129/how-to-create-a-restricted-ssh-user-for-port-forwarding


